/**
 * UserInfo Component - Hi·ªÉn th·ªã th√¥ng tin chi ti·∫øt ng∆∞·ªùi d√πng v√† lo·∫°i ƒë·ªôc gi·∫£
 */
import React from 'react';
import { userService } from '../services';
import './UserInfo.css';

const UserInfo = () => {
  const user = userService.getCurrentUser();
  const readerInfo = userService.getReaderInfo();
  const permissions = userService.getReaderPermissions();
  const debugInfo = userService.getDebugInfo();

  if (!user) {
    return (
      <div className="user-info-container">
        <div className="user-info-card">
          <h3>‚ùå Ch∆∞a ƒëƒÉng nh·∫≠p</h3>
          <p>Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ xem th√¥ng tin ng∆∞·ªùi d√πng.</p>
        </div>
      </div>
    );
  }

  return (
    <div className="user-info-container">
      <div className="user-info-card">
        <div className="user-header">
          <h2>üë§ Th√¥ng tin ng∆∞·ªùi d√πng</h2>
          <span className={`role-badge ${user.role.toLowerCase()}`}>
            {user.role}
          </span>
        </div>

        {/* Th√¥ng tin c∆° b·∫£n */}
        <div className="info-section">
          <h3>üìã Th√¥ng tin c∆° b·∫£n</h3>
          <div className="info-grid">
            <div className="info-item">
              <label>User ID:</label>
              <span>{user.userId}</span>
            </div>
            <div className="info-item">
              <label>T√™n ƒëƒÉng nh·∫≠p:</label>
              <span>{user.username}</span>
            </div>
            <div className="info-item">
              <label>H·ªç t√™n:</label>
              <span>{userService.getDisplayName()}</span>
            </div>
            <div className="info-item">
              <label>Email:</label>
              <span>{userService.getEmail()}</span>
            </div>
            <div className="info-item">
              <label>Vai tr√≤:</label>
              <span>{user.role}</span>
            </div>
          </div>
        </div>

        {/* Th√¥ng tin Reader (n·∫øu c√≥) */}
        {userService.isReader() && readerInfo && (
          <div className="info-section reader-section">
            <h3>üìö Th√¥ng tin ƒë·ªôc gi·∫£</h3>
            <div className="reader-status">
              <div className={`status-indicator ${readerInfo.isActive ? 'active' : 'inactive'}`}>
                {readerInfo.isActive ? '‚úÖ Ho·∫°t ƒë·ªông' : '‚ùå Kh√¥ng ho·∫°t ƒë·ªông'}
              </div>
              {readerInfo.isVip && (
                <div className="vip-badge">‚≠ê VIP</div>
              )}
            </div>

            <div className="info-grid">
              <div className="info-item">
                <label>M√£ ƒë·ªôc gi·∫£:</label>
                <span>{readerInfo.docGiaId}</span>
              </div>
              <div className="info-item">
                <label>Lo·∫°i ƒë·ªôc gi·∫£:</label>
                <span className={`reader-type ${readerInfo.loaiDocGia?.toLowerCase()}`}>
                  {readerInfo.loaiDocGia}
                </span>
              </div>
              <div className="info-item">
                <label>C·∫•p b·∫≠c:</label>
                <span className={`reader-level ${readerInfo.capBac?.toLowerCase()}`}>
                  {readerInfo.capBac}
                </span>
              </div>
              <div className="info-item">
                <label>Tr·∫°ng th√°i th√†nh vi√™n:</label>
                <span className={`member-status ${readerInfo.memberStatus?.toLowerCase()}`}>
                  {readerInfo.memberStatus}
                </span>
              </div>
              <div className="info-item">
                <label>Ng√†y h·∫øt h·∫°n:</label>
                <span>{readerInfo.ngayHetHan ? new Date(readerInfo.ngayHetHan).toLocaleDateString('vi-VN') : 'Ch∆∞a c√≥'}</span>
              </div>
            </div>
          </div>
        )}

        {/* Quy·ªÅn h·∫°n (n·∫øu l√† Reader) */}
        {permissions && (
          <div className="info-section permissions-section">
            <h3>üîê Quy·ªÅn h·∫°n v√† gi·ªõi h·∫°n</h3>
            <div className="permissions-grid">
              <div className="permission-item">
                <label>C√≥ th·ªÉ m∆∞·ª£n s√°ch:</label>
                <span className={permissions.canBorrow ? 'yes' : 'no'}>
                  {permissions.canBorrow ? '‚úÖ C√≥' : '‚ùå Kh√¥ng'}
                </span>
              </div>
              <div className="permission-item">
                <label>S·ªë s√°ch t·ªëi ƒëa:</label>
                <span className="limit-value">{permissions.maxBooks} cu·ªën</span>
              </div>
              <div className="permission-item">
                <label>S·ªë ng√†y m∆∞·ª£n t·ªëi ƒëa:</label>
                <span className="limit-value">{permissions.maxDays} ng√†y</span>
              </div>
              <div className="permission-item">
                <label>C√≥ th·ªÉ ƒë·∫∑t tr∆∞·ªõc:</label>
                <span className={permissions.canReserve ? 'yes' : 'no'}>
                  {permissions.canReserve ? '‚úÖ C√≥' : '‚ùå Kh√¥ng'}
                </span>
              </div>
              {permissions.priorityReservation && (
                <div className="permission-item">
                  <label>∆Øu ti√™n ƒë·∫∑t tr∆∞·ªõc:</label>
                  <span className="yes">‚úÖ VIP</span>
                </div>
              )}
              {permissions.extendedRenewal && (
                <div className="permission-item">
                  <label>Gia h·∫°n m·ªü r·ªông:</label>
                  <span className="yes">‚úÖ VIP</span>
                </div>
              )}
            </div>
          </div>
        )}

        {/* Debug Info */}
        <div className="info-section debug-section">
          <h3>üîß Debug Info</h3>
          <div className="debug-info">
            <pre>{JSON.stringify(debugInfo, null, 2)}</pre>
          </div>
        </div>
      </div>
    </div>
  );
};

export default UserInfo;